#include <bits/stdc++.h> 
int count(int low,int mid,int high,vector<int>&arr)
{
	int c=0;
	int right=mid+1;
	for(int i=low;i<=mid;i++)
	{
		while(right<=high&&arr[i]>2*arr[right])
		{
			right++;
		}
		c+=right-(mid+1);
	}
	return c;
}
void merge(int low,int mid,int high,vector<int>&arr)
{
	int c=0;
	vector<int>temp;
	int left=low;
	int right=mid+1;
	while(left<=mid&&right<=high)
	{
		if(arr[left]<=arr[right])
		{
			temp.push_back(arr[left]);
			left++;
		}
		else
		{
			temp.push_back(arr[right]);
			right++;
		}
	}
	while(left<=mid)
	{
		temp.push_back(arr[left]);
		left++;
	}
	while(right<=high)
	{
		temp.push_back(arr[right]);
		right++;
	}
	for(int i=low;i<=high;i++)
	{
		arr[i]=temp[i-low];
	}
}
int mergeSort(int low,int high,vector<int>&arr)
{
	int c=0;
	if(low>=high)
	{
		return c;
	}
	int mid=(low+high)>>1;
	c+=mergeSort(low,mid,arr);
	c+=mergeSort(mid+1,high,arr);
	c+=count(low,mid,high,arr);
	merge(low,mid,high,arr);
	return c;
}
int reversePairs(vector<int> &arr, int n){
	int low=0;
	int high=n-1;
	return mergeSort(low,high,arr);
}

TC-O(nlogn)
SC-o(n)
