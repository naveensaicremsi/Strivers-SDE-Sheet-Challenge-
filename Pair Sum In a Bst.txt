void f(BinaryTreeNode<int>*root,vector<int>&inorder)
{
    if(root==NULL)
    {
        return;
    }
    f(root->left,inorder);
    inorder.push_back(root->data);
    f(root->right,inorder);
}
bool pairSumBst(BinaryTreeNode<int> *root, int k)
{
  vector<int>inorder;
  f(root,inorder);
  int n=inorder.size();
  int low=0;
  int high=n-1;
  while(low<high)
  {
      if(inorder[low]+inorder[high]==k)
      {
          return true;
      }
      else if(inorder[low]+inorder[high]<k)
      {
          low++;
      }
      else
      {
          high--;
      }
  }
  return false;
}

TC-O(n)+O(n)
SC-O(n)+O(n)