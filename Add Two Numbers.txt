/**
 * Definition of linked list:
 *
 * class Node {
 * public:
 *      int data;
 *      Node *next;
 *      Node() {
 *          this->data = 0;
 *          this->next = NULL;
 *      }
 *      Node(int data) {
 *          this->data = data;
 *          this->next = NULL;
 *      }
 *      Node (int data, Node *next) {
 *          this->data = data;
 *          this->next = next;
 *      }
 * };
 *
 *************************************************************************/

Node *addTwoNumbers(Node *num1, Node *num2)
{
    if(num1==NULL)
    {
        return num2;
    }
    if(num2==NULL)
    {
        return num1;
    }
    int c=0;
    Node *dummy=new Node(0);
    Node *start=dummy;
    while(num1||num2||c)
    {
        int s=0;
        if(num1)
        {
            s+=num1->data;
            num1=num1->next;
        }
        if(num2)
        {
            s+=num2->data;
            num2=num2->next;
        }
        s+=c;
        c=s/10;
        Node *temp=new Node(s%10);
        start->next=temp;
        start=start->next;
    }
    return dummy->next;
}

TC-O(n1+n2) 
n1 is the length of the linked list one 
n2 is the length of the linked list two 
SC-O(max(n1,n2))