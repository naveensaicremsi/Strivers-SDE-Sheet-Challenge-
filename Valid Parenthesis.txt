bool isValidParenthesis(string expression)
{
    stack<char>st;
    int n=expression.size();
    for(int i=0;i<n;i++)
    {
        if(expression[i]=='('||expression[i]=='['||expression[i]=='{')
        {
            st.push(expression[i]);
        }
        else
        {
          if (st.empty()) {
            return false;
          }
          auto it = st.top();
          st.pop();
          if (expression[i] == ')' && it == '(' ||
              expression[i] == ']' && it == '[' ||
              expression[i] == '}' && it == '{') {
            continue;
          } else {
            return false;
          }
        }
    }
    if(st.empty())
    {
        return true;
    }
    return false;
}
TC-O(n)
SC-O(n)