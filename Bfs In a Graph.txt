#include <bits/stdc++.h> 

using namespace std;

void f(int node, vector<int>& bfs, vector<int>& vis, vector<int> adj[])
{
    queue<int> q;
    q.push(node);
    vis[node] = 1;
    while (!q.empty())
    {
        node = q.front();
        q.pop();
        bfs.push_back(node);
        for (auto it : adj[node])
        {
            if (!vis[it])
            {
                vis[it] = 1;
                q.push(it);
            }
        }
    }
}

vector<int> BFS(int vertex, vector<pair<int, int>> edges)
{
    vector<int> bfs;
    vector<int> vis(vertex, 0);
    vector<int> adj[vertex];
    for (auto it : edges)
    {
        int n = it.first;
        int m = it.second;
        adj[n].push_back(m);
        adj[m].push_back(n);
    }
    for(int i=0;i<vertex;i++)
    {
        sort(adj[i].begin(),adj[i].end());
    }
    for (int i = 0; i < vertex; i++)
    {
        if (!vis[i])
        {
            f(i, bfs, vis, adj);
        }
    }
    return bfs;
}

TC-O(V+2E)+O(xlogn)
SC-O(V)+O(2*E)+O(V)