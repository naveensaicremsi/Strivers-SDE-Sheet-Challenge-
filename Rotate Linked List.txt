/**
 * Definition for singly-linked list.
 * class Node {
 * public:
 *     int data;
 *     Node *next;
 *     Node() : data(0), next(nullptr) {}
 *     Node(int x) : data(x), next(nullptr) {}
 *     Node(int x, Node *next) : data(x), next(next) {}
 * };
 */

Node *rotate(Node *head, int k) {
     if(head==NULL||head->next==NULL||k==0)
     {
          return head;
     }
     int n=1;
     Node *ptr=head;
     while(ptr->next!=NULL)
     {
          ptr=ptr->next;
          n++;
     }
     ptr->next=head;
     k=k%n;
     k=n-k;
     while(k)
     {
          ptr=ptr->next;
          k--;
     }
     head=ptr->next;
     ptr->next=NULL;
     return head;
}

TC-O(n)+O(k%n-k)
SC-O(1)