#include <bits/stdc++.h> 
bool ispalindrome(string &s,int start,int end)
{
    while(start<=end)
    {
        if(s[start]!=s[end])
        {
            return false;
        }
        start++;
        end--;
    }
    return true;
}
void f(int ind,string &s,vector<string>&ds,vector<vector<string>>&ans,int n)
{
    if(ind==n)
    {
        ans.push_back(ds);
        return;
    }
    for(int i=ind;i<n;i++)
    {
        if(ispalindrome(s,ind,i))
        {
            ds.push_back(s.substr(ind,i-ind+1));
            f(i+1,s,ds,ans,n);
            ds.pop_back();
        }
    }
}
vector<vector<string>> partition(string &s) 
{
   int n=s.size();
   vector<vector<string>>ans;
   vector<string>ds;
   f(0,s,ds,ans,n);
   return ans;
}
