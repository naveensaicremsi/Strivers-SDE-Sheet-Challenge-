#include <bits/stdc++.h> 
int uniqueSubstrings(string input)
{
   int n=input.size();
   int maxi=0;
   for(int i=0;i<n;i++)
   {
       for(int j=i;j<n;j++)
       {
           int c=0;
           unordered_set<char>st;
           bool flag=true;
           for(int k=i;k<=j;k++)
           {
               if(st.find(input[k])!=st.end())
               {
                   flag=false;
               }
               st.insert(input[k]);
           }
           if(flag)
           {
               maxi=max(maxi,j-i+1);
           }
       }
   }
   return maxi;
}

TC-O(n*n*n)
SC-O(1)


#include <bits/stdc++.h> 
int uniqueSubstrings(string input)
{
    int n=input.size();
    int left=0;
    int right=0;
    int maxi=0;
    unordered_set<char>st;
    while(right<n)
    {
        while(st.find(input[right])!=st.end())
        {
            st.erase(input[left++]);
        }
        st.insert(input[right]);
        maxi=max(maxi,right-left+1);
        right++;
    }
    return maxi;
}

TC-O(n+n*log)
SC-O(n)