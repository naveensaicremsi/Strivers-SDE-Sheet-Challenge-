void find(BinaryTreeNode<int>*root,vector<int>&inorder)
{
    if(root==NULL)
    {
        return;
    }
    find(root->left,inorder);
    inorder.push_back(root->data);
    find(root->right,inorder);
}
pair<int,int> predecessorSuccessor(BinaryTreeNode<int>* root, int key)
{
    vector<int>inorder;
    find(root,inorder);
    int temp=-1;
    int n=inorder.size();
    for(int i=0;i<n;i++)
    {
        if(inorder[i]==key)
        {
            temp=i;
            break;
        }
    }
    int preorder=-1;
    int postorder=-1;
    if(temp!=-1&&temp!=0)
    {
        preorder=inorder[temp-1];
    }
    if(temp!=-1&&temp<inorder.size()-1)
    {
        postorder=inorder[temp+1];
    }
    return {preorder,postorder};
}

TC-O(n)+O(n)
SC-O(1)