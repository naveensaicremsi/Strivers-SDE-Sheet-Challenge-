#include <bits/stdc++.h> 
/************************************************************

    Following is the TreeNode class structure

    template <typename T>
    class TreeNode {
       public:
        T data;
        TreeNode<T> *left;
        TreeNode<T> *right;

        TreeNode(T data) {
            this->data = data;
            left = NULL;
            right = NULL;
        }
    };

************************************************************/
TreeNode<int>*construct(vector<int>&inorder,vector<int>&preorder,int instart,int inend,
int prestart,int preend,unordered_map<int,int>&mpp)
{
    if(prestart>preend||instart>inend)
    {
        return NULL;
    }
    int inroot=mpp[preorder[prestart]];
    int numsleft=inroot-instart;
    TreeNode<int>*root=new TreeNode<int>(preorder[prestart]);
    root->left=construct(inorder,preorder,instart,inroot-1,prestart+1,prestart+numsleft,mpp);
    root->right=construct(inorder,preorder,inroot+1,inend,prestart+numsleft+1,preend,mpp);
    return root;
}
TreeNode<int> *buildBinaryTree(vector<int> &inorder, vector<int> &preorder)
{
    unordered_map<int,int>mpp;
    int n=inorder.size();
    for(int i=0;i<n;i++)
    {
        mpp[inorder[i]]=i;
    }
    int instart=0;
    int inend=n-1;
    int prestart=0;
    int preend=n-1;
    return construct(inorder,preorder,instart,inend,prestart,preend,mpp);
}

TC-O(n)
SC-O(n)