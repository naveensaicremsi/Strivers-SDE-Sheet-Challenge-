#include <bits/stdc++.h> 
void dfs(int node,vector<int>adj[],vector<int>&vis,stack<int>&st)
{
    vis[node]=1;
    for(auto adjacentNode:adj[node])
    {
        if(!vis[adjacentNode])
        {
            dfs(adjacentNode,adj,vis,st);
        }
    }
    st.push(node);
}
vector<int> topologicalSort(vector<vector<int>> &edges, int v, int e)  {
    vector<int>adj[v];
    for(int i=0;i<e;i++)
    {
       auto it=edges[i];
       int u1=it[0];
       int v1=it[1];
       adj[u1].push_back(v1);
    }
    stack<int>st;
    vector<int>vis(v,0);
    for (int i = 0; i < v; i++) {
      if(!vis[i])
      dfs(i, adj, vis, st);
    }
    vector<int>ans;
    while(!st.empty())
    {
        auto it=st.top();
        st.pop();
        ans.push_back(it);
    }
    return ans;
}
